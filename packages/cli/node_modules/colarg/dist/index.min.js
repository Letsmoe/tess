var e={d:(t,s)=>{for(var a in s)e.o(s,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:s[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{W:()=>s});class s{constructor(e){this.args=e,this.options=[],this.resultMap={},this.commands=[],this.staggeredExecution=[],this.usage=""}parse(){this.resultMap={};for(const[e,t]of this.args.entries())if("-"===t[0]){let e,s=t.includes("=")&&t.indexOf("=")||1/0;e=t.startsWith("--")?t.substring(2,s):t.substring(1,s);let a=!1;for(const s of this.options)if(s.name===e||s.alias===e)if(a=!0,s.callback&&this.staggeredExecution.push(s),t.includes("=")){let e=this.getValue(t);if(!("any"===s.type||typeof e===s.type||Array.isArray(e)&&"array"===s.type))throw new TypeError("Type mismatch, expected '"+s.type+"' but got '"+typeof e+"'");this.resultMap[s.name]=e,this.resultMap[s.alias]=e}else this.resultMap[s.name]=!0,this.resultMap[s.alias]=!0;if(!a)throw new Error("Unknown option '"+e+"'")}else{let a=!1;for(const i of this.commands)if(i.name===t){a=!0,this.args.splice(e,1);const t=new s(this.args);for(const e of this.options.concat(i.args))t.addOption(e);return t.enableHelp(),i.callback(t.getArgs()),{}}a||(this.resultMap.default=this.resultMap.default||[],this.resultMap.default.push(t))}for(const e of this.staggeredExecution)e.callback(this.resultMap,this.options,this.commands);for(const e of this.options)if(e.required&&!this.resultMap[e.name])throw new Error("Required argument '"+e.name+"' is missing")}getValue(e){const t=e.substring(e.indexOf("=")+1);return-1!==["no","false","0","1","true","yes","y","n"].indexOf(t.toLowerCase())?["true","1","yes","y"].indexOf(t.toLowerCase())>-1:isNaN(Number(t))?'"'===t[0]&&'"'===t[t.length-1]?t.substring(1,t.length-1):"["===t[0]&&"]"===t[t.length-1]?JSON.parse(t):t:Number(t)}defineUsage(e){this.usage=e}addOption({name:e,alias:t,type:s,defaults:a,description:i,required:n,callback:r}){if(this.options.find((t=>t.name===e))||this.options.find((e=>e.alias===t)))return!1;this.options.push({name:e,alias:t,type:s,defaults:a,description:i,required:n,callback:r})}addCommand({name:e,description:t,args:s},a){if(this.commands.find((t=>t.name===e)))return!1;this.commands.push({name:e,description:t,args:s,callback:a})}addOptions(e){for(const t of e)if(!this.addOption(t))return!1}enableHelp(){this.addOption({name:"help",description:"Shows the help message",alias:"h",type:"any",required:!1,callback:(e,t,s)=>{console.log(this.usage||"Usage:");let a=[["Name","Alias","Type","Default","Description","Required","Callback"]];for(const e of t)a.push(["--"+e.name,"-"+e.alias,e.type,e.defaults?.toString()||"",e.description,e.required?"[REQUIRED]":"[NOT REQUIRED]",e.callback?"[CALLBACK]":""]);const i=e=>{const t=e.reduce(((e,t)=>{for(let s=0;s<t.length;s++)e[s]<t[s].length&&(e[s]=t[s].length);return e}),[0,0,0,0,0,0,0]);return e.map((e=>e.map(((e,s)=>e+" ".repeat(t[s]-e.length))).join("  "))).join("\n")};if(console.log(i(a)),s.length>0){let e=[["Name","Description"]];console.log(""),console.log("Commands:");for(const t of s)e.push([t.name,t.description,"\n",i(t.args.map((e=>["\t","--"+e.name,"-"+e.alias,e.type])))]);console.log(i(e))}process.exit(0)}})}getArgs(){return this.parse(),this.resultMap}}var a=t.W;export{a as colarg};