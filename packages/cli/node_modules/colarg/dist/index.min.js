var e={d:(s,t)=>{for(var a in t)e.o(t,a)&&!e.o(s,a)&&Object.defineProperty(s,a,{enumerable:!0,get:t[a]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s)},s={};e.d(s,{W:()=>t});class t{constructor(e){this.args=e,this.options=[],this.resultMap={},this.commands=[],this.staggeredExecution=[],this.usage=""}parse(){this.resultMap={};for(const[e,s]of this.args.entries())if("-"===s[0]){let e,t=s.includes("=")&&s.indexOf("=")||1/0;e=s.startsWith("--")?s.substring(2,t):s.substring(1,t);let a=!1;for(const t of this.options)if(t.name===e||t.alias===e)if(a=!0,t.callback&&this.staggeredExecution.push(t),s.includes("=")){let e=this.getValue(s);"any"===t.type||typeof e===t.type||Array.isArray(e)&&"array"===t.type?(this.resultMap[t.name]=e,this.resultMap[t.alias]=e):(console.error("Type mismatch, expected '"+t.type+"' but got '"+typeof e+"'"),process.exit(1))}else this.resultMap[t.name]=!0,this.resultMap[t.alias]=!0;a||(console.error("Unknown option '"+e+"'"),process.exit(1))}else{let a=!1;for(const i of this.commands)if(i.name===s){a=!0,this.args.splice(e,1);const s=new t(this.args);for(const e of this.options.concat(i.args))s.addOption(e);return s.enableHelp(),i.callback(s.run()),{}}a||(this.resultMap.default=this.resultMap.default||[],this.resultMap.default.push(s))}for(const e of this.staggeredExecution)e.callback(this.resultMap,this.options,this.commands);for(const e of this.options)e.required&&!this.resultMap[e.name]&&(console.error("Required argument '"+e.name+"' is missing"),process.exit(1)),this.resultMap.hasOwnProperty(e.name)||this.resultMap.hasOwnProperty(e.alias)||(this.resultMap[e.name]=e.defaults,this.resultMap[e.alias]=e.defaults)}getValue(e){const s=e.substring(e.indexOf("=")+1);return-1!==["no","false","0","1","true","yes","y","n"].indexOf(s.toLowerCase())?["true","1","yes","y"].indexOf(s.toLowerCase())>-1:isNaN(Number(s))?'"'===s[0]&&'"'===s[s.length-1]?s.substring(1,s.length-1):"["===s[0]&&"]"===s[s.length-1]?JSON.parse(s):s:Number(s)}defineUsage(e){this.usage=e}addOption({name:e,alias:s,type:t,defaults:a,description:i,required:r,callback:o}){if(this.options.some((t=>t.name===e||t.alias===s)))return!1;this.options.push({name:e,alias:s,type:t,defaults:a,description:i,required:r,callback:o})}addCommand({name:e,description:s,args:t},a){if(this.commands.find((s=>s.name===e)))return!1;this.commands.push({name:e,description:s,args:t,callback:a})}addOptions(e){for(const s of e)if(!this.addOption(s))return!1}enableHelp(){this.addOption({name:"help",description:"Shows the help message",alias:"h",type:"any",required:!1,callback:(e,s,t)=>{console.log(this.usage||"Usage:");let a=[["Name","Alias","Type","Default","Description","Required","Callback"]];for(const e of s)a.push(["--"+e.name,"-"+e.alias,e.type,e.defaults?.toString()||"",e.description,e.required?"[REQUIRED]":"[NOT REQUIRED]",e.callback?"[CALLBACK]":""]);const i=e=>{const s=e.reduce(((e,s)=>{for(let t=0;t<s.length;t++)e[t]<s[t].length&&(e[t]=s[t].length);return e}),[0,0,0,0,0,0,0]);return e.map((e=>e.map(((e,t)=>e+" ".repeat(s[t]-e.length))).join("  "))).join("\n")};if(console.log(i(a)),t.length>0){let e=[["Name","Description"]];console.log(""),console.log("Commands:");for(const s of t)e.push([s.name,s.description,"\n",i(s.args.map((e=>["\t","--"+e.name,"-"+e.alias,e.type])))]);console.log(i(e))}process.exit(0)}})}run(){return this.parse(),this.resultMap}}var a=s.W;export{a as colarg};